EJERCIO 1

public class SerieGenerator {
    public static void main(String[] args) {
        int N = 10; 
        int[] serie = generarSerie(N);

       
        for (int num : serie) {
            System.out.print(num + " ");
        }
    }

    public static int[] generarSerie(int N) {
        int[] serie = new int[N];

        
        int contador1 = 1; 
        int contador2 = 5; 

        for (int i = 0; i < N; i++) {
            
            if (i % 2 == 0) {
                serie[i] = contador1;
                contador1 += 2; // Incrementar en 2 para la secuencia impar
            } else {
                serie[i] = contador2;
                contador2 += 2; // Incrementar en 2 para la secuencia par
            }
        }

     
    }
}

..............................................................................
EJERCICIO 2




public class SerieGenerator {
    public static void main(String[] args) {
        int N = 15; 
        int[] serie = generarSerie(N);

       
        for (int num : serie) {
            System.out.print(num + " ");
        }
    }

    public static int[] generarSerie(int N) {
        int[] serie = new int[N];

        
        if (N >= 1) serie[0] = 1;
        if (N >= 2) serie[1] = 1;
        if (N >= 3) serie[2] = 1;

       
        for (int i = 3; i < N; i++) {
            serie[i] = serie[i - 1] + serie[i - 2] + serie[i - 3];
        }

      
    }
}

...................................................................
EJERCICIO 3 





public class SerieGenerator {
    public static void main(String[] args) {
        int N = 15; 
        int[] serie = generarSerie(N);

        for (int num : serie) {
            System.out.print(num + " ");
        }
    }

    public static int[] generarSerie(int N) {
        int[] serie = new int[N];

        for (int i = 0; i < N; i++) {
            if (i % 2 == 0) {
               
                serie[i] = 2 + (i / 2) * 2; // 2, 4, 6, 8, ...
            } else {
                
                serie[i] = 1 + (i / 2) * 2; // 1, 3, 5, 7, ...
            }
        }

       
    }
}


....................................................................
EJERCICIO 4





public class SerieGenerator {
    public static void main(String[] args) {
        int N = 20; 
        String[] serie = generarSerie(N);

        
        for (String term : serie) {
            System.out.print(term + " ");
        }
    }

    public static String[] generarSerie(int N) {
        String[] serie = new String[N];
        String[] vocales = {"a", "e", "i", "o", "u"};

        for (int i = 0; i < N; i++) {
            int grupo = (i / 5) + 1; 
            int posicion = i % 5; 

            serie[i] = vocales[posicion] + grupo + vocales[posicion];
        }

        
    }
}


..........................................................
EJERCICIO 5



public class SerieGenerator {
    public static void main(String[] args) {
        int N = 20; 
        List<String> serie = generarSerie(N);
        System.out.println(serie);
    }

    public static List<String> generarSerie(int N) {
        List<String> serie = new ArrayList<>();
        String[] patrones = {"a", "e", "i", "i", "e", "a"};
        
        for (int i = 1; i <= N; i++) {
            for (String patron : patrones) {
                if (patron.equals("i")) {
                    serie.add(String.valueOf(i));
                } else {
                    serie.add(patron);
                }
            }
        }
        
    }
}
.......................................................................
EJERCICIO 6   




public class SerieGenerator {
    public static void main(String[] args) {
        int N = 10; 
        List<Integer> serie = generarSerie(N);
        System.out.println(serie);
    }

    public static List<Integer> generarSerie(int N) {
        List<Integer> serie = new ArrayList<>();
        int[] incrementos = {-4, -4, 14, 6, 16, 36, 58};
        serie.add(9); 
        
        for (int i = 1; i < N; i++) {
            int ultimoTermino = serie.get(serie.size() - 1);
            int incremento = incrementos[(i - 1) % incrementos.length];
            int nuevoTermino = ultimoTermino + incremento;
            serie.add(nuevoTermino);
        }
       
    }
}










